# Copyright 2023 The StableHLO Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Forward Compatibility Build

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main, forward-compat ] # FIXME: Remove forward-compat branch before submit
  schedule:
    # Run once a day
    - cron:  '0 12 * * *'
  workflow_dispatch:

# Ensure that only a single job or workflow using the same
# concurrency group will run at a time. This would cancel
# any in-progress jobs in the same github workflow and github
# ref (e.g. refs/heads/main or refs/pull/<pr_number>/merge).
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  cmake-build:
    env:
      LLVM_PROJECT_DIR: "llvm-project"
      LLVM_BUILD_DIR: "llvm-build"
      STABLEHLO_BUILD_DIR: "stablehlo-build"
      STABLEHLO_PYTHON_BUILD_DIR: "stablehlo-python-build"
    strategy:
      matrix:
        release: ["v0.9.0", "v0.10.0", "v0.11.0"] # TODO: Dynamically populate using tags.
      fail-fast: false
    runs-on: ${{ github.repository == 'openxla/stablehlo' && 'ubuntu-22.04-64core' ||  'ubuntu-22.04'  }}

    steps:
    - name: Checkout StableHLO
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Fetch tags (forked repos)
      if: ${{ github.repository != 'openxla/stablehlo' }}
      shell: bash
      run: |
        git remote add upstream https://github.com/openxla/stablehlo.git
        git fetch --tags upstream
    
    - name: Checkout release ${{ matrix.release }}
      shell: bash
      run: |
        git checkout tags/${{matrix.release}}
    
    - name: Setup test variables
      id: test-variables
      shell: bash
      run: |
        # Set target version v0.9.0 --> 0.9.0
        TAG="${{matrix.release}}" # v0.9.0
        TEST_TARGET="${TAG#v}"    # 0.9.0
        echo "target=$TEST_TARGET" >> $GITHUB_OUTPUT

        # Set filename: v0.9.0 --> stablehlo/tests/stablehlo_legalize_to_vhlo.0_9_0.mlir
        TEST_SUFFIX="$(echo $TAG | grep -o '[0-9]*\.[0-9]*\.[0-9]*' | sed 's/\./_/g')"
        TEST_FILE="stablehlo/tests/stablehlo_legalize_to_vhlo.$TEST_SUFFIX.mlir"
        TEST_BC_FILE="$TEST_FILE.HEAD.bc"
        echo "testfile=$TEST_FILE" >> $GITHUB_OUTPUT
        echo "bcfile=$TEST_BC_FILE" >> $GITHUB_OUTPUT

        # Set filecheck command
        TEST_CMD="// RUN: stablehlo-translate --deserialize %s.HEAD.bc | stablehlo-translate --serialize --target=$TEST_TARGET | stablehlo-opt --mlir-print-op-generic | FileCheck %s"
        if [[ "${{matrix.release}}" == "v0.9.0" ]]; then 
          TEST_CMD="// RUN: stablehlo-opt %s.HEAD.bc --vhlo-to-version='target=current' --vhlo-legalize-to-stablehlo --stablehlo-legalize-to-vhlo --vhlo-to-version='target=$TEST_TARGET' --mlir-print-op-generic | FileCheck %s"
        fi
        echo "filecheck=$TEST_CMD" >> $GITHUB_OUTPUT

        # Set build tool name
        BUILD_CMD=
        
    - name: Checkout latest serialized artifact
      shell: bash
      run: |
        # Checkout bytecode file serialized at HEAD
        TEST_FILE=""
        git checkout origin/forward-compat -- "${{ steps.test-variables.outputs.bcfile }}" # FIXME: origin main
        
        # Modify test file to run using FileCheck
        sed -i "1i ${{steps.test-variables.outputs.filecheck}}" "${{steps.test-variables.outputs.testfile}}"
        cat $TEST_FILE

    - name: Get LLVM Version
      id: llvm-version
      shell: bash
      run: |
        echo "version=$(cat ${{ github.workspace }}/build_tools/llvm_version.txt)" >> $GITHUB_OUTPUT

    - name: Setup workspace
      uses: ./.github/actions/setup-build
      with:
        llvm-version: ${{ steps.llvm-version.outputs.version }}

    - name: Checkout latest build tools
      shell: bash
      run: |
        # FIXME: Change to origin/main
        git checkout origin/forward-compat -- ./build_tools/github_actions/ci_build_cmake_llvm.sh
        git checkout origin/forward-compat -- ./build_tools/github_actions/ci_build_cmake.sh

    - name: Configure and Build LLVM
      shell: bash
      run: |
        ./build_tools/github_actions/ci_build_cmake_llvm.sh "$LLVM_PROJECT_DIR" "$LLVM_BUILD_DIR"

    - name: Build and Test StableHLO
      shell: bash
      run: |
        ./build_tools/github_actions/ci_build_cmake.sh "$LLVM_BUILD_DIR" "$STABLEHLO_BUILD_DIR"
